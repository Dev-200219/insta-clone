{"version":3,"sources":["firebase.js","Components/AuthProvider.jsx","Components/Login.jsx","Components/SignUp1.jsx","Components/VideoCard.jsx","Components/Navbar.jsx","Components/Home.jsx","Components/SignUp2.jsx","Components/ImageCard.jsx","Components/ProfilePage.jsx","Components/ReelCard.jsx","Components/Reels.jsx","App.js","index.js"],"names":["firebase","initializeApp","config","googleProvider","auth","GoogleAuthProvider","firestore","storage","signUpWithGoogle","signInWithPopup","userContext","createContext","AuthProvider","props","useState","user","setUser","loading","setLoading","useEffect","unsub1","onAuthStateChanged","a","uid","displayName","email","photoURL","docRef","collection","doc","get","exists","set","bio","Provider","value","children","useStyles","makeStyles","root","margin","width","other_login","sign_up_btn","Login","setEmail","pass","setPass","showPass","setShowPass","useContext","history","useHistory","classes","to","Container","className","src","alt","TextField","id","onChange","e","currentTarget","labelWidth","label","color","variant","FormControl","InputLabel","htmlFor","OutlinedInput","type","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","event","preventDefault","edge","Button","signInWithEmailAndPassword","catch","err","errMsg","message","alert","push","marginBottom","SignUpPersonal","confirmPass","setConfirmPass","showConfirmPass","setShowConfirmPass","handleMouseDownPassword","error","createUserWithEmailAndPassword","setTimeout","theme","marginTop","spacing","borderRadius","top","left","VideoCard","currUserName","setCurrUserName","currUserDP","setCurrUserDP","currPage","setCurrPage","comment","setComment","isEmojiPalleteOpen","setIsEmojiPalleteOpen","isLikedByUser","data","likes","includes","post","commentsArr","comments","startIndex","endIndex","Math","min","length","emojiPalleteRef","useRef","closeEmojiPallete","current","style","then","url","controls","dp","name","placeholder","onKeyDown","key","newCommArr","update","ref","display","emoji","native","arr","i","map","el","idx","Pagination","count","ceil","size","newPage","Navbar","title","flexGrow","height","addBtn","bottom","right","logo","objectFit","logout_logo","AppBar","Toolbar","signOut","Home","inputFile","posts","setPosts","isUploading","setIsUploading","unsub","onSnapshot","querySnapshot","docArr","docs","Fab","click","uploadedObj","files","split","uploadtask","Date","now","put","on","snapshot","percent","bytesTransferred","totalBytes","console","log","getDownloadURL","add","CircularProgress","wordBreak","SignUp","setName","setBio","dpRef","multiline","imgObj","uploadTask","ImageCard","isPlaying","setIsPlaying","isCommBoxOpen","setIsCommBoxOpen","commBoxRef","postRef","pause","play","ProfilePage","currUserPost","setCurrUserPost","setCurrUserReels","currUserBio","setCurrUserBio","isBioInputOpen","setIsBioInputOpen","docsArr","inputBio","inputBioSaveBtn","closeBioBox","newDPObj","col","textOverflow","ReelCard","isCommentBoxOpen","setIsCommentBoxOpen","commentsContainer","myEl","observeConfig","rootMargin","threshold","IntersectionObserver","elements","intersectionRatio","observe","loop","autoPlay","border","sheetSize","perLine","Reels","postsArr","setPostsArr","isLoading","setIsLoading","blurRef","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51280ff1.chunk.js","sourcesContent":["import config from \"./config.json\";\r\nimport firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/auth\";\r\nimport \"firebase/compat/firestore\";\r\nimport \"firebase/compat/storage\"\r\n\r\nfirebase.initializeApp(config);\r\nlet googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nexport const signUpWithGoogle = () => {\r\n  auth.signInWithPopup(googleProvider);\r\n};\r\n\r\nexport default firebase;\r\n","import { createContext, useEffect, useState } from \"react\";\r\nimport { auth, firestore } from \"../firebase\";\r\n\r\nexport const userContext = createContext();\r\n\r\nlet AuthProvider = (props) => {\r\n  let [user, setUser] = useState(null);\r\n  let [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let unsub1 = auth.onAuthStateChanged(async (user) => {\r\n      if (user) {\r\n        let { uid, displayName, email, photoURL } = user;\r\n\r\n        let docRef = firestore.collection(\"users\").doc(uid);\r\n        let documentSnapshot = await docRef.get();\r\n\r\n        if (!documentSnapshot.exists) {\r\n          docRef.set({\r\n            uid,\r\n            displayName,\r\n            photoURL,\r\n            bio:\"\"\r\n          });\r\n        }\r\n\r\n        setUser({\r\n          displayName,\r\n          uid,\r\n          email,\r\n          photoURL,\r\n          bio:\"\"\r\n        });\r\n      } else {\r\n        setUser(null);\r\n      }\r\n\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => {\r\n      unsub1();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <userContext.Provider value={user}>\r\n        {!loading && props.children}\r\n      </userContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import { Button, Container, FormControl, TextField } from \"@material-ui/core\";\r\nimport { auth, signUpWithGoogle } from \"../firebase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../CSS/signup.css\";\r\nimport { useContext, useState } from \"react\";\r\nimport { userContext } from \"./AuthProvider\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: \"15px\",\r\n    width: \"16rem\",\r\n  },\r\n\r\n  other_login: {\r\n    margin: \"10px\",\r\n  },\r\n\r\n  sign_up_btn: {\r\n    margin: \"10px\",\r\n  },\r\n});\r\n\r\nlet Login = () => {\r\n  let [email, setEmail] = useState(\"\");\r\n  let [pass, setPass] = useState(\"\");\r\n  let [showPass, setShowPass] = useState(false);\r\n  let user = useContext(userContext);\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPass(!showPass);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!user ? (\r\n        <Container className=\"sign-up-box-container\">\r\n          <div className=\"sign-up-box\">\r\n            <div className=\"display-img-container\">\r\n              <img\r\n                src=\"https://images.unsplash.com/photo-1586191582151-f73872dfd183?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxjb2xsZWN0aW9uLXBhZ2V8M3wxNzA4Mjc2fHxlbnwwfHx8fA%3D%3D&w=1000&q=80\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <form>\r\n              <TextField\r\n                id=\"outlined-adornment-weight\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.currentTarget.value);\r\n                }}\r\n                labelWidth={0}\r\n                className={classes.root}\r\n                label=\"Email\"\r\n                color=\"black\"\r\n                variant=\"outlined\"\r\n              />\r\n              <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Password\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type={showPass ? \"text\" : \"password\"}\r\n                  value={pass}\r\n                  onChange={(e) => {\r\n                    setPass(e.currentTarget.value);\r\n                  }}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPass ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>\r\n              <Button\r\n                onClick={() => {\r\n                  auth.signInWithEmailAndPassword(email, pass).catch((err)=>{\r\n                    var errMsg = err.message;\r\n                    if(errMsg === \"auth/wrong-password\")\r\n                    alert(\"Wrong Password!!!\")\r\n                    else if(errMsg === \"auth/user-not-found\")\r\n                    alert(\"User does not exist\");\r\n                    else\r\n                    alert(errMsg)\r\n                  })\r\n              }}\r\n                className={classes.sign_up_btn}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                Log In\r\n              </Button>\r\n\r\n              <Button\r\n                onClick={() => {\r\n                  history.push(\"/sign-up1\");\r\n                }}\r\n                className={classes.sign_up_btn}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n\r\n              <div className={classes.other_login}>\r\n                <Button\r\n                  onClick={() => {\r\n                    signUpWithGoogle();\r\n                  }}\r\n                >\r\n                  <img\r\n                    src=\"http://localhost:3000/icons/google-icon.svg\"\r\n                    alt=\"google_icon\"\r\n                  ></img>\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      ) : (\r\n        <Redirect to=\"/\"></Redirect>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import { Button, Container, TextField, FormControl } from \"@material-ui/core\";\r\nimport { auth, signUpWithGoogle } from \"../firebase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../CSS/signup.css\";\r\nimport { useContext, useState } from \"react\";\r\nimport { userContext } from \"./AuthProvider\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: \"15px\",\r\n    width: \"16rem\",\r\n  },\r\n\r\n  other_login: {\r\n    margin: \"10px\",\r\n  },\r\n\r\n  sign_up_btn: {\r\n    margin: \"10px\",\r\n  },\r\n});\r\n\r\nlet SignUpPersonal = () => {\r\n  const classes = useStyles();\r\n  let [email, setEmail] = useState(\"\");\r\n  let [pass, setPass] = useState(\"\");\r\n  let [confirmPass, setConfirmPass] = useState(\"\");\r\n  let [showPass, setShowPass] = useState(false);\r\n  let [showConfirmPass, setShowConfirmPass] = useState(false);\r\n  let user = useContext(userContext);\r\n  let history = useHistory();\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPass(!showPass);\r\n  };\r\n\r\n  const heandleConfirmPassShow = ()=>{\r\n    setShowConfirmPass(!showConfirmPass);\r\n  }\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!user ? (\r\n        <Container className=\"sign-up-box-container\">\r\n          <div className=\"sign-up-box\">\r\n            <div className=\"display-img-container\">\r\n              <img\r\n                src=\"https://images.unsplash.com/photo-1586191582151-f73872dfd183?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxjb2xsZWN0aW9uLXBhZ2V8M3wxNzA4Mjc2fHxlbnwwfHx8fA%3D%3D&w=1000&q=80\"\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <form color=\"primary\">\r\n              <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Email\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  className={classes.root}\r\n                  value={email}\r\n                  onChange={(e) => {\r\n                    setEmail(e.currentTarget.value);\r\n                  }}\r\n                  labelWidth={40}\r\n                />\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Password\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  className={classes.root}\r\n                  id=\"outlined-adornment-password\"\r\n                  type={showPass ? \"text\" : \"password\"}\r\n                  value={pass}\r\n                  onChange={(e) => {\r\n                    setPass(e.currentTarget.value);\r\n                  }}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showPass ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={70}\r\n                />\r\n              </FormControl>\r\n              <FormControl variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                  Confirm Password\r\n                </InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  type={showConfirmPass ? \"text\" : \"password\"}\r\n                  value={confirmPass}\r\n                  onChange={(e) => {\r\n                    setConfirmPass(e.currentTarget.value);\r\n                  }}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={heandleConfirmPassShow}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                      >\r\n                        {showConfirmPass ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  labelWidth={132}\r\n                />\r\n              </FormControl>\r\n\r\n              <Button\r\n                onClick={() => {\r\n                  if (email !== \"\" && pass !== \"\" && pass === confirmPass) {\r\n                    let error;\r\n                    auth.createUserWithEmailAndPassword(email, pass).catch((err)=>{\r\n                      error = err;\r\n                      alert(err.message)\r\n                    })\r\n\r\n                    setTimeout(()=>{\r\n                      if(!error)\r\n                      history.push(\"/sign-up2\");\r\n                    },1000);\r\n                  }\r\n                }}\r\n                className={classes.sign_up_btn}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                Sign Up\r\n              </Button>\r\n\r\n              <Button\r\n                onClick={() => {\r\n                  history.push(\"/login\");\r\n                }}\r\n                className={classes.sign_up_btn}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                Log In\r\n              </Button>\r\n\r\n              <div className={classes.other_login}>\r\n                <Button\r\n                  onClick={() => {\r\n                    signUpWithGoogle().catch((err)=>{\r\n                      alert(err.message);\r\n                    })\r\n                  }}\r\n                >\r\n                  <img\r\n                    src=\"http://localhost:3000/icons/google-icon.svg\"\r\n                    alt=\"google_icon\"\r\n                  ></img>\r\n                </Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      ) : (\r\n        <Redirect to=\"/\"></Redirect>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUpPersonal;\r\n","import \"../CSS/VideoCard.css\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\r\nimport FavoriteSharpIcon from \"@material-ui/icons/FavoriteSharp\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { userContext } from \"./AuthProvider\";\r\nimport { firestore } from \"../firebase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    borderRadius: \"5px\",\r\n    position: \"absolute\",\r\n    top: \"440px\",\r\n    left: \"0px\",\r\n  },\r\n}));\r\n\r\nlet VideoCard = (props) => {\r\n  let user = useContext(userContext);\r\n  let [currUserName, setCurrUserName] = useState(\"\");\r\n  let [currUserDP, setCurrUserDP] = useState(\"\");\r\n  let [currPage, setCurrPage] = useState(1);\r\n  let [comment, setComment] = useState(\"\");\r\n  let [isEmojiPalleteOpen, setIsEmojiPalleteOpen] = useState(false);\r\n\r\n  let isLikedByUser = props.data.likes.includes(user.uid);\r\n  let post = props.data;\r\n  let commentsArr = post.comments;\r\n  const classes = useStyles();\r\n  let startIndex = (currPage - 1) * 4;\r\n  let endIndex = Math.min(commentsArr.length, currPage * 4);\r\n  const emojiPalleteRef = useRef(null);\r\n\r\n  const openEmojiPallete = () => {\r\n    emojiPalleteRef.current.style = \"display:block\";\r\n  };\r\n\r\n  const closeEmojiPallete = () => {\r\n    emojiPalleteRef.current.style = \"display:none\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(user.uid)\r\n      .get()\r\n      .then((docRef) => {\r\n        setCurrUserName(docRef.data().displayName);\r\n        setCurrUserDP(docRef.data().photoURL);\r\n      });\r\n  }, [user.uid]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"video-card-container\">\r\n        <div className=\"data-container\">\r\n          {post.type === \"image\" ? (\r\n            <img src={post.url} alt=\"post_img\"></img>\r\n          ) : (\r\n            <video controls src={post.url}></video>\r\n          )}\r\n        </div>\r\n        <div className=\"vl\"></div>\r\n        <div className=\"like-comment-container\">\r\n          <div className=\"user-info\">\r\n            <div className=\"user-img\">\r\n              {post.dp ? (\r\n                <img src={post.dp} alt=\"\"></img>\r\n              ) : (\r\n                <img\r\n                  src=\"https://i.stack.imgur.com/l60Hf.png\"\r\n                  alt=\"some_dp\"\r\n                ></img>\r\n              )}\r\n            </div>\r\n            <p className=\"user-name\">{post.name}</p>\r\n          </div>\r\n          <div className=\"add-comment\">\r\n            <input\r\n              onChange={(e) => {\r\n                setComment(e.currentTarget.value);\r\n              }}\r\n              value={comment}\r\n              placeholder=\"Comment...\"\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  let newCommArr = [\r\n                    ...post.comments,\r\n                    {\r\n                      name: currUserName,\r\n                      dp: currUserDP,\r\n                      value: comment,\r\n                    },\r\n                  ];\r\n\r\n                  firestore\r\n                    .collection(\"posts\")\r\n                    .doc(post.id)\r\n                    .update({ comments: newCommArr });\r\n\r\n                  setComment(\"\");\r\n                  if (isEmojiPalleteOpen) {\r\n                    setIsEmojiPalleteOpen(false);\r\n                    closeEmojiPallete();\r\n                  }\r\n                }\r\n              }}\r\n            ></input>\r\n            <button\r\n              onClick={() => {\r\n                if (isEmojiPalleteOpen) {\r\n                  closeEmojiPallete();\r\n                  setIsEmojiPalleteOpen(false);\r\n                } else {\r\n                  openEmojiPallete();\r\n                  setIsEmojiPalleteOpen(true);\r\n                }\r\n              }}\r\n              className=\"emoji-picker-btn\"\r\n            >\r\n              <SentimentVerySatisfiedIcon />\r\n            </button>\r\n            <div\r\n              ref={emojiPalleteRef}\r\n              style={{ display: \"none\" }}\r\n              className=\"emoji-picker-container\"\r\n            >\r\n              <Picker\r\n                onClick={(emoji) => {\r\n                  setComment(comment + emoji.native);\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={() => {\r\n              let arr = [];\r\n              if (isLikedByUser) {\r\n                for (let i = 0; i < post.likes.length; i++) {\r\n                  if (post.likes[i] !== user.uid) arr.push(post.likes[i]);\r\n                }\r\n              } else {\r\n                arr = [...post.likes, user.uid];\r\n              }\r\n              firestore.collection(\"posts\").doc(post.id).update({ likes: arr });\r\n            }}\r\n            className=\"home-like-btn-container\"\r\n          >\r\n            {isLikedByUser ? (\r\n              <FavoriteSharpIcon className=\"like-btn\" />\r\n            ) : (\r\n              <FavoriteBorderIcon className=\"like-btn\" />\r\n            )}\r\n            <div>\r\n              {`${props.data.likes.length} ${\r\n                props.data.likes.length > 1 ? \"Likes\" : \"Like\"\r\n              }`}\r\n            </div>\r\n          </button>\r\n\r\n          <div className=\"actual-comments-container\">\r\n            {commentsArr.map((el, idx) => {\r\n              if (idx >= startIndex && idx <= endIndex - 1)\r\n                return (\r\n                  <div key={idx} className=\"actual-comment\">\r\n                    <div className=\"comment-user-info\">\r\n                      <div className=\"comm-user-img\">\r\n                        {el.dp ? (\r\n                          <img src={el.dp} alt=\"\" />\r\n                        ) : (\r\n                          <img\r\n                            src=\"https://i.stack.imgur.com/l60Hf.png\"\r\n                            alt=\"\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                      <p>{el.name}</p>\r\n                    </div>\r\n                    <div className=\"comment-value\">\r\n                      <p>{el.value}</p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n            })}\r\n          </div>\r\n          <div className={classes.root}>\r\n            <Pagination\r\n              count={Math.ceil(commentsArr.length / 4)}\r\n              size=\"large\"\r\n              color=\"primary\"\r\n              onChange={(event, newPage) => {\r\n                setCurrPage(newPage);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoCard;\r\n","import { AppBar, Button, makeStyles, Toolbar } from \"@material-ui/core\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport MovieFilterIcon from \"@material-ui/icons/MovieFilter\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { useHistory } from \"react-router\";\r\nimport { auth } from \"../firebase\";\r\n\r\nlet Navbar = () => {\r\n  let history = useHistory();\r\n  const useStyles = makeStyles({\r\n    title: {\r\n      flexGrow: 1,\r\n      height: \"5rem\",\r\n      width: \"5rem\",\r\n    },\r\n    addBtn: {\r\n      position: \"fixed\",\r\n      bottom: \"20px\",\r\n      right: \"20px\",\r\n    },\r\n    logo: {\r\n      height: \"100%\",\r\n      objectFit: \"cover\",\r\n    },\r\n    logout_logo: {\r\n      height: \"2rem\",\r\n      width: \"2rem\",\r\n      borderRadius: \"50%\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <AppBar color=\"white\" position=\"fixed\">\r\n        <Toolbar>\r\n          <div\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n            className={classes.title}\r\n          >\r\n            <img\r\n              className={classes.logo}\r\n              src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Instagram_logo.svg/800px-Instagram_logo.svg.png\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <Button\r\n            onClick={() => {\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            <HomeIcon />\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              history.push(\"/reels\");\r\n            }}\r\n          >\r\n            <MovieFilterIcon />\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              history.push(\"/profile-page\");\r\n            }}\r\n          >\r\n            <AccountCircleIcon />\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              auth.signOut();\r\n            }}\r\n          >\r\n            <img\r\n              className={classes.logout_logo}\r\n              src=\"https://png.pngtree.com/png-clipart/20190520/original/pngtree-vector-logout-icon-png-image_4233257.jpg\"\r\n              alt=\"\"\r\n            />\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { makeStyles, Fab, CircularProgress } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport { firestore, storage } from \"../firebase\";\r\nimport { userContext } from \"./AuthProvider\";\r\nimport VideoCard from \"./VideoCard\";\r\nimport \"../CSS/Home.css\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nlet Home = () => {\r\n  const inputFile = useRef(null);\r\n  let history = useHistory();\r\n  let user = useContext(userContext);\r\n  let doc, docRef, userName;\r\n  let [posts, setPosts] = useState([]);\r\n  let [isUploading, setIsUploading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    if (user) {\r\n      docRef = firestore.collection(\"users\").doc(user.uid);\r\n      doc = await docRef.get();\r\n      userName = await doc.data().name;\r\n\r\n      if (userName) {\r\n        history.push(\"/sign-up2\");\r\n      }\r\n    }\r\n\r\n    let unsub = firestore.collection(\"posts\").onSnapshot((querySnapshot) => {\r\n      let docArr = querySnapshot.docs;\r\n      let arr = [];\r\n\r\n      for (let i = 0; i < docArr.length; i++) {\r\n        arr.push({\r\n          id: docArr[i].id,\r\n          ...docArr[i].data(),\r\n        });\r\n      }\r\n      setPosts(arr);\r\n\r\n      return () => {\r\n        unsub();\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    addBtn: {\r\n      position: \"fixed\",\r\n      bottom: \"20px\",\r\n      right: \"20px\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const onButtonClick = () => {\r\n    // `current` points to the mounted file input element\r\n    inputFile.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          <Navbar />\r\n          <Fab\r\n            onClick={() => {\r\n              onButtonClick();\r\n            }}\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={classes.addBtn}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n          <input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            ref={inputFile}\r\n            style={{ display: \"none\" }}\r\n            onChange={(e) => {\r\n              let uploadedObj = e.currentTarget.files[0];\r\n              let { name, size, type } = uploadedObj;\r\n\r\n              type = type.split(\"/\")[0];\r\n              size = size / 1000000;\r\n\r\n              if (type !== \"image\") {\r\n                alert(\"Only Images can be uploaded\");\r\n                return;\r\n              }\r\n\r\n              if (size > 15) {\r\n                alert(\"Can't upload files with size more than 15MB\");\r\n                return;\r\n              }\r\n\r\n              let uploadtask = storage\r\n                .ref(`/posts/${user.uid}/${Date.now() + \"-\" + name}`)\r\n                .put(uploadedObj);\r\n              uploadtask.on(\r\n                \"state_changed\",\r\n                (snapshot) => {\r\n                  var percent =\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                  console.log(percent + \"% done\");\r\n                  if (percent >= 0 && percent < 100) {\r\n                    setIsUploading(true);\r\n                  } else {\r\n                    setIsUploading(false);\r\n                  }\r\n                },\r\n                null,\r\n                () => {\r\n                  uploadtask.snapshot.ref.getDownloadURL().then((url) => {\r\n                    firestore\r\n                      .collection(\"users\")\r\n                      .doc(user.uid)\r\n                      .get()\r\n                      .then((docRef) => {\r\n                        firestore.collection(\"posts\").add({\r\n                          uid: user.uid,\r\n                          name: docRef.data().displayName,\r\n                          dp: docRef.data().photoURL,\r\n                          likes: [],\r\n                          comments: [],\r\n                          url: url,\r\n                          type,\r\n                        });\r\n                      });\r\n                  });\r\n                }\r\n              );\r\n            }}\r\n          />\r\n          {isUploading ? (\r\n            <CircularProgress className=\"progress-circle\" color=\"secondary\" />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"posts-container\">\r\n            {posts.map((el, idx) => {\r\n              return <VideoCard key={idx} data={el} />;\r\n            })}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/login\"></Redirect>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { Button, Container, TextField } from \"@material-ui/core\";\r\nimport { firestore, storage } from \"../firebase\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../CSS/signup.css\";\r\nimport { useContext, useRef, useState } from \"react\";\r\nimport { userContext } from \"./AuthProvider\";\r\nimport { useHistory } from \"react-router\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginBottom: \"15px\",\r\n  },\r\n\r\n  other_login: {\r\n    margin: \"10px\",\r\n  },\r\n\r\n  sign_up_btn: {\r\n    margin: \"10px\",\r\n  },\r\n\r\n  bio: {\r\n    wordBreak: \"break-word\",\r\n  },\r\n});\r\n\r\nlet SignUp = (props) => {\r\n  const classes = useStyles();\r\n  let [name, setName] = useState(\"\");\r\n  let [bio, setBio] = useState(\"\");\r\n  let user = useContext(userContext);\r\n  let history = useHistory();\r\n  const dpRef = useRef(null);\r\n  return (\r\n    <>\r\n      <Container className=\"sign-up-box-container\">\r\n        <div className=\"sign-up-box\">\r\n          <div className=\"display-img-container\">\r\n            <img\r\n              src=\"https://images.unsplash.com/photo-1586191582151-f73872dfd183?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxjb2xsZWN0aW9uLXBhZ2V8M3wxNzA4Mjc2fHxlbnwwfHx8fA%3D%3D&w=1000&q=80\"\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n          <form color=\"primary\">\r\n            <TextField\r\n              className={classes.root}\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              value={name}\r\n              onChange={(e) => {\r\n                setName(e.currentTarget.value);\r\n              }}\r\n            />\r\n            <TextField\r\n              className={classes.bio}\r\n              id=\"bio\"\r\n              label=\"Bio\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              multiline\r\n              value={bio}\r\n              onChange={(e) => {\r\n                setBio(e.currentTarget.value);\r\n              }}\r\n            />\r\n\r\n            <Button onClick={()=>{\r\n              dpRef.current.click();\r\n            }} className=\"profile-pic-upload-container\">\r\n              Upload Profile Picture\r\n              <CloudUploadIcon />\r\n            </Button>\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              ref={dpRef}\r\n              onChange={(e) => {\r\n                let imgObj = e.currentTarget.files[0];\r\n                let { type } = imgObj;\r\n                type = type.split(\"/\")[0];\r\n\r\n                if (type !== \"image\") {\r\n                  alert(\"Upload Image Only\");\r\n                  return;\r\n                }\r\n\r\n                let uploadTask = storage\r\n                  .ref(`/dp/${user.uid + \"-\" + Date.now()}`)\r\n                  .put(imgObj);\r\n                uploadTask.on(\"state_changed\", null, null, () => {\r\n                  uploadTask.snapshot.ref.getDownloadURL().then((url) => {\r\n                    firestore\r\n                      .collection(\"users\")\r\n                      .doc(user.uid)\r\n                      .update({ photoURL: url });\r\n                  });\r\n                });\r\n              }}\r\n            />\r\n\r\n            <Button\r\n              onClick={async () => {\r\n                let docRef = firestore.collection(\"users\").doc(user.uid);\r\n                await docRef.update({ displayName: name, bio: bio });\r\n\r\n                setTimeout(() => {\r\n                  history.push(\"/\");\r\n                }, 2500);\r\n              }}\r\n              className={classes.sign_up_btn}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { useContext, useRef, useState } from \"react\";\r\nimport \"../CSS/ImageCard.css\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport FavoriteSharpIcon from \"@material-ui/icons/FavoriteSharp\";\r\nimport { userContext } from \"./AuthProvider\";\r\n\r\nlet ImageCard = (props) => {\r\n  let user = useContext(userContext);\r\n  let [isPlaying, setIsPlaying] = useState(false);\r\n  let [isCommBoxOpen, setIsCommBoxOpen] = useState(false);\r\n  let commentsArr = props.data.comments;\r\n\r\n  const commBoxRef = useRef(null);\r\n  const postRef = useRef(null);\r\n\r\n  const displayCommBox=()=>{\r\n    commBoxRef.current.style = \"display:block\";\r\n    postRef.current.style = \"display:none\";\r\n  }\r\n\r\n  const removeCommBox=()=>{\r\n    commBoxRef.current.style = \"display:none\";\r\n    postRef.current.style = \"display:block\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"profile-post-container\">\r\n        <div ref={commBoxRef} style={{display:\"none\"}} className=\"profile-all-comments-cont\">\r\n        {commentsArr.map((el, idx) => {\r\n              return (\r\n                <div key={idx} className=\"actual-comment\">\r\n                  <div className=\"comment-user-info\">\r\n                    <div className=\"comm-user-img\">\r\n                      {el.dp ? (\r\n                        <img src={el.dp} alt=\"\" />\r\n                      ) : (\r\n                        <img src=\"https://i.stack.imgur.com/l60Hf.png\" alt=\"\" />\r\n                      )}\r\n                    </div>\r\n                    <p>{el.name}</p>\r\n                  </div>\r\n                  <div className=\"comment-value\">\r\n                    <p>{el.value}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        <div ref={postRef} style={{display:\"block\"}} className=\"post-src\">\r\n          {props.data.type === \"image\" ? (\r\n            <img src={props.data.url} alt=\"\" />\r\n          ) : (\r\n            <video\r\n              onClick={(e) => {\r\n                if (isPlaying) {\r\n                  setIsPlaying(false);\r\n                  e.currentTarget.pause();\r\n                } else {\r\n                  setIsPlaying(true);\r\n                  e.currentTarget.play();\r\n                }\r\n              }}\r\n              src={props.data.url}\r\n              alt=\"\"\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"post-likes-comm\">\r\n          <div className=\"profile-like-container\">\r\n            <FavoriteSharpIcon className=\"profile-like-btn\" />\r\n\r\n            <div>\r\n              {`${props.data.likes.length} ${props.data.likes.length > 1 ? \"Likes\" : \"Like\"}`}\r\n            </div>\r\n          </div>\r\n          <div onClick={()=>{\r\n            if(isCommBoxOpen)\r\n            {\r\n              setIsCommBoxOpen(false);\r\n              removeCommBox();\r\n            }\r\n            else\r\n            {\r\n              displayCommBox();\r\n              setIsCommBoxOpen(true);\r\n            }\r\n          }} className=\"profile-comment-container\">\r\n          <CommentIcon className=\"profile-comments-btn\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageCard;\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { userContext } from \"./AuthProvider\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../CSS/ProfilePage.css\";\r\nimport { firestore, storage } from \"../firebase\";\r\nimport { Redirect } from \"react-router\";\r\nimport ImageCard from \"./ImageCard\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\nlet ProfilePage = () => {\r\n  let user = useContext(userContext);\r\n  let [currUserName, setCurrUserName] = useState(\"\");\r\n  let [currUserDP, setCurrUserDP] = useState(\"\");\r\n  let [currUserPost, setCurrUserPost] = useState([]);\r\n  let [currUserReels, setCurrUserReels] = useState([]);\r\n  let [currUserBio, setCurrUserBio] = useState(\"\");\r\n  let [isBioInputOpen, setIsBioInputOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(user.uid)\r\n      .get()\r\n      .then((docRef) => {\r\n        setCurrUserName(docRef.data().displayName);\r\n        setCurrUserDP(docRef.data().photoURL);\r\n        setCurrUserBio(docRef.data().bio);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let arr = [];\r\n    firestore\r\n      .collection(\"posts\")\r\n      .get()\r\n      .then((data) => {\r\n        let docsArr = data.docs;\r\n        for (let i = 0; i < docsArr.length; i++) {\r\n          if (docsArr[i].data().uid === user.uid) arr.push(docsArr[i].data());\r\n        }\r\n        setCurrUserPost(arr);\r\n      });\r\n\r\n    arr = [];\r\n\r\n    firestore\r\n      .collection(\"reels\")\r\n      .get()\r\n      .then((data) => {\r\n        let docsArr = data.docs;\r\n        for (let i = 0; i < docsArr.length; i++) {\r\n          console.log(docsArr[i].data());\r\n          if (docsArr[i].data().uid === user.uid) arr.push(docsArr[i].data());\r\n        }\r\n        setCurrUserReels(arr);\r\n      });\r\n  }, []);\r\n\r\n  console.log(currUserPost);\r\n\r\n  const inputFile = useRef(null);\r\n  const inputBio = useRef(null);\r\n  const inputBioSaveBtn = useRef(null);\r\n  const openBioBox = () => {\r\n    inputBio.current.style = \"display:block\";\r\n    inputBioSaveBtn.current.style = \"display:block\";\r\n  };\r\n  const closeBioBox = () => {\r\n    inputBio.current.style = \"display:none\";\r\n    inputBioSaveBtn.current.style = \"display:none\";\r\n  };\r\n  const openInputBox = () => {\r\n    inputFile.current.click();\r\n  };\r\n\r\n  // console.log(currUserPost.length);\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          <Navbar />\r\n          <div className=\"profile-container\">\r\n            <div className=\"profile-user-info\">\r\n              <div className=\"profile-card\">\r\n                <div\r\n                  onClick={() => {\r\n                    openInputBox();\r\n                  }}\r\n                  className=\"profile-img\"\r\n                >\r\n                  {currUserDP ? (\r\n                    <img src={currUserDP} alt=\"\" />\r\n                  ) : (\r\n                    <img src=\"https://i.stack.imgur.com/l60Hf.png\" alt=\"\" />\r\n                  )}\r\n                  <input\r\n                    onChange={(e) => {\r\n                      let newDPObj = e.currentTarget.files[0];\r\n                      console.log(newDPObj);\r\n                      let { type } = newDPObj;\r\n                      type = type.split(\"/\")[0];\r\n                      if (type !== \"image\") {\r\n                        alert(\"Upload Image Only\");\r\n                        return;\r\n                      }\r\n\r\n                      let uploadTask = storage\r\n                        .ref(`/dp/${user.uid + \"-\" + Date.now()}`)\r\n                        .put(newDPObj);\r\n                      uploadTask.on(\"state_changed\", null, null, () => {\r\n                        uploadTask.snapshot.ref.getDownloadURL().then((url) => {\r\n                          console.log(url);\r\n                          firestore\r\n                            .collection(\"users\")\r\n                            .doc(user.uid)\r\n                            .update({ photoURL: url });\r\n\r\n                          firestore\r\n                            .collection(\"posts\")\r\n                            .get()\r\n                            .then((data) => {\r\n                              let docsArr = data.docs;\r\n                              for (let i = 0; i < docsArr.length; i++) {\r\n                                if (docsArr[i].data().uid === user.uid) {\r\n                                  docsArr[i].ref.update({ dp: url });\r\n                                }\r\n                              }\r\n                            });\r\n\r\n                          setCurrUserDP(url);\r\n                        });\r\n                      });\r\n                    }}\r\n                    ref={inputFile}\r\n                    type=\"file\"\r\n                    style={{ display: \"block\" }}\r\n                  ></input>\r\n                </div>\r\n                <div className=\"profile-user-name\">\r\n                  <h2>{currUserName}</h2>\r\n                </div>\r\n                <div className=\"profile-user-bio\">\r\n                  {currUserBio === \"\" ? (\r\n                    <p>Add to bio..</p>\r\n                  ) : (\r\n                    <p col style={{ textOverflow: \"auto\" }}>\r\n                      {currUserBio}\r\n                    </p>\r\n                  )}\r\n                  <Button\r\n                    className=\"bio-edit-btn\"\r\n                    onClick={() => {\r\n                      if (isBioInputOpen) {\r\n                        setIsBioInputOpen(false);\r\n                        closeBioBox();\r\n                      } else {\r\n                        setIsBioInputOpen(true);\r\n                        openBioBox();\r\n                      }\r\n                    }}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                  >\r\n                    <EditIcon />\r\n                  </Button>\r\n                  <input\r\n                    ref={inputBio}\r\n                    type=\"text\"\r\n                    style={{ display: \"none\" }}\r\n                    value={currUserBio}\r\n                    onChange={(e) => {\r\n                      setCurrUserBio(e.currentTarget.value);\r\n                    }}\r\n                  ></input>\r\n                  <Button\r\n                    onClick={() => {\r\n                      closeBioBox();\r\n                      firestore\r\n                        .collection(\"users\")\r\n                        .doc(user.uid)\r\n                        .get()\r\n                        .then((docRef) => {\r\n                          docRef.ref.update({ bio: currUserBio });\r\n                        });\r\n                    }}\r\n                    style={{ display: \"none\" }}\r\n                    ref={inputBioSaveBtn}\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"profile-user-posts\">\r\n              <h1>My Posts : {currUserPost.length}</h1>\r\n              <div className=\"profile-posts-carousel\">\r\n                {currUserPost.map((el, idx) => {\r\n                  return <ImageCard key={idx} data={el} />;\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport AudiotrackIcon from \"@material-ui/icons/Audiotrack\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteSharpIcon from \"@material-ui/icons/FavoriteSharp\";\r\nimport { firestore } from \"../firebase\";\r\nimport CommentIcon from \"@material-ui/icons/Comment\";\r\nimport \"../CSS/ReelCard.css\";\r\nimport { userContext } from \"./AuthProvider\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\r\n\r\nlet ReelCard = (props) => {\r\n  let user = useContext(userContext);\r\n  let [isPlaying, setIsPlaying] = useState(true);\r\n  let [isCommentBoxOpen, setIsCommentBoxOpen] = useState(false);\r\n  let [comment, setComment] = useState(\"\");\r\n  let [currUserName, setCurrUserName] = useState(\"\");\r\n  let [currUserDP, setCurrUserDP] = useState(\"\");\r\n  let [isEmojiPalleteOpen, setIsEmojiPalleteOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firestore\r\n      .collection(\"users\")\r\n      .doc(user.uid)\r\n      .get()\r\n      .then((docRef) => {\r\n        setCurrUserName(docRef.data().displayName);\r\n        setCurrUserDP(docRef.data().photoURL);\r\n      });\r\n  }, []);\r\n  let isLikedByUser = props.data.likes.includes(user.uid);\r\n  let commentsArr = props.data.comments;\r\n\r\n  const commentsContainer = useRef(null);\r\n  const openCommentBox = () => {\r\n    commentsContainer.current.style = \"display:block\";\r\n  };\r\n\r\n  const closeCommentBox = () => {\r\n    commentsContainer.current.style = \"display:none\";\r\n  };\r\n\r\n  //step 1 find the element which you want to observe\r\n  const myEl = useRef(null);\r\n\r\n  let observeConfig = {\r\n    root: null,\r\n    rootMargin: \"0px\",\r\n    threshold: [0.25, 0.5, 0.75, 1],\r\n  };\r\n\r\n  useEffect(() => {\r\n    //step 3\r\n    const myObserver = new IntersectionObserver((elements) => {\r\n      if (elements[0].intersectionRatio >= 0.5) {\r\n        //play the video\r\n        if (myEl.current) myEl.current.play();\r\n      } else {\r\n        //pause the video\r\n        if (myEl.current) {\r\n          myEl.current.pause();\r\n        }\r\n      }\r\n    }, observeConfig);\r\n\r\n    // //step 4\r\n    myObserver.observe(myEl.current);\r\n  }, []);\r\n\r\n  const emojiPalleteRef = useRef(null);\r\n\r\n  const openEmojiPallete = () => {\r\n    emojiPalleteRef.current.style = \"display:block\";\r\n  };\r\n\r\n  const closeEmojiPallete = () => {\r\n    emojiPalleteRef.current.style = \"display:none\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"video-container\">\r\n        <div className=\"video-src\">\r\n          <p className=\"reels-user-name\">{props.data.name}</p>\r\n          <span className=\"song-details\">\r\n            <AudiotrackIcon />\r\n            <marquee>Song Name</marquee>\r\n          </span>\r\n          <video\r\n            onClick={(e) => {\r\n              if (isPlaying) {\r\n                setIsPlaying(false);\r\n                e.currentTarget.pause();\r\n              } else {\r\n                setIsPlaying(true);\r\n                e.currentTarget.play();\r\n              }\r\n            }}\r\n            src={props.data.url}\r\n            ref={myEl}\r\n            loop\r\n            autoPlay\r\n          ></video>\r\n          <div\r\n            onClick={() => {\r\n              let arr = [];\r\n              if (isLikedByUser) {\r\n                for (let i = 0; i < props.data.likes.length; i++) {\r\n                  if (props.data.likes[i] !== user.uid)\r\n                    arr.push(props.data.likes[i]);\r\n                }\r\n              } else {\r\n                arr = [...props.data.likes, user.uid];\r\n              }\r\n              firestore\r\n                .collection(\"reels\")\r\n                .doc(props.data.id)\r\n                .update({ likes: arr });\r\n            }}\r\n            className=\"like-btn-container\"\r\n          >\r\n            {isLikedByUser ? (\r\n              <FavoriteSharpIcon className=\"reels-like-btn\" />\r\n            ) : (\r\n              <FavoriteBorderIcon className=\"reels-like-btn\" />\r\n            )}\r\n          </div>\r\n          <div className=\"num-likes\">\r\n            <p>{`${props.data.likes.length} ${\r\n              props.data.likes.length > 1 ? \"Likes\" : \"Like\"\r\n            }`}</p>\r\n          </div>\r\n          <div\r\n            onClick={() => {\r\n              if (isCommentBoxOpen) {\r\n                setIsCommentBoxOpen(false);\r\n                closeCommentBox();\r\n              } else {\r\n                setIsCommentBoxOpen(true);\r\n                openCommentBox();\r\n              }\r\n            }}\r\n            className=\"comment-btn-container\"\r\n          >\r\n            <CommentIcon className=\"reels-comments-btn\" />\r\n          </div>\r\n        </div>\r\n        <div\r\n          ref={commentsContainer}\r\n          style={{ display: \"none\", border: \"1px solid\" }}\r\n          className=\"reels-comments-container\"\r\n        >\r\n          <div className=\"reels-add-comment\">\r\n            <input\r\n              onChange={(e) => {\r\n                setComment(e.currentTarget.value);\r\n              }}\r\n              value={comment}\r\n              placeholder=\"Comment...\"\r\n              onKeyDown={(e) => {\r\n                if (e.key === \"Enter\") {\r\n                  let newCommArr = [\r\n                    ...props.data.comments,\r\n                    {\r\n                      name: currUserName,\r\n                      dp: currUserDP,\r\n                      value: comment,\r\n                    },\r\n                  ];\r\n\r\n                  firestore\r\n                    .collection(\"reels\")\r\n                    .doc(props.data.id)\r\n                    .update({ comments: newCommArr });\r\n\r\n                  setComment(\"\");\r\n                }\r\n              }}\r\n            ></input>\r\n            <button\r\n              onClick={() => {\r\n                if (isEmojiPalleteOpen) {\r\n                  closeEmojiPallete();\r\n                  setIsEmojiPalleteOpen(false);\r\n                } else {\r\n                  openEmojiPallete();\r\n                  setIsEmojiPalleteOpen(true);\r\n                }\r\n              }}\r\n              className=\"reel-emoji-picker-btn\"\r\n            >\r\n              <SentimentVerySatisfiedIcon />\r\n            </button>\r\n            <div\r\n              ref={emojiPalleteRef}\r\n              style={{ display: \"none\" }}\r\n              className=\"reel-emoji-picker-container\"\r\n            >\r\n              <Picker\r\n                onClick={(emoji) => {\r\n                  setComment(comment + emoji.native);\r\n                }}\r\n                sheetSize={16}\r\n                perLine={9}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"reel-all-comments\">\r\n            {commentsArr.map((el, idx) => {\r\n              return (\r\n                <div key={idx} className=\"actual-comment\">\r\n                  <div className=\"comment-user-info\">\r\n                    <div className=\"comm-user-img\">\r\n                      {el.dp ? (\r\n                        <img src={el.dp} alt=\"\" />\r\n                      ) : (\r\n                        <img src=\"https://i.stack.imgur.com/l60Hf.png\" alt=\"\" />\r\n                      )}\r\n                    </div>\r\n                    <p>{el.name}</p>\r\n                  </div>\r\n                  <div className=\"comment-value\">\r\n                    <p>{el.value}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ReelCard;\r\n","import { makeStyles, Fab, CircularProgress } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Navbar from \"./Navbar\";\r\nimport \"../CSS/Reels.css\";\r\nimport ReelCard from \"./ReelCard\";\r\nimport { useContext, useEffect, useState, useRef } from \"react\";\r\nimport { firestore, storage } from \"../firebase\";\r\nimport { userContext } from \"./AuthProvider\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet Reels = () => {\r\n  const inputFile = useRef(null);\r\n  let user = useContext(userContext);\r\n  let [postsArr, setPostsArr] = useState([]);\r\n  let [isLoading, setIsLoading] = useState(false);\r\n  let blurRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    let unsub = firestore.collection(\"reels\").onSnapshot((querySnapshot) => {\r\n      let docArr = querySnapshot.docs;\r\n      let arr = [];\r\n\r\n      for (let i = 0; i < docArr.length; i++) {\r\n        arr.push({\r\n          id: docArr[i].id,\r\n          ...docArr[i].data(),\r\n        });\r\n      }\r\n      setPostsArr(arr);\r\n\r\n      return () => {\r\n        unsub();\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  const useStyles = makeStyles({\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    addBtn: {\r\n      position: \"fixed\",\r\n      bottom: \"20px\",\r\n      right: \"20px\",\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  const onButtonClick = () => {\r\n    // `current` points to the mounted file input element\r\n    inputFile.current.click();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <>\r\n          {isLoading ? (\r\n            <div className=\"reels-progress-circle-container\">\r\n              <CircularProgress color=\"primary\" />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div className=\"navbar-container\">\r\n            <Navbar />\r\n          </div>\r\n          <div ref={blurRef} className=\"all-video-container\">\r\n            {postsArr.map((el, idx) => {\r\n              return <ReelCard key={idx} data={el} />;\r\n            })}\r\n          </div>\r\n          <Fab\r\n            onClick={() => {\r\n              onButtonClick();\r\n            }}\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={classes.addBtn}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n          <input\r\n            type=\"file\"\r\n            id=\"file\"\r\n            ref={inputFile}\r\n            style={{ display: \"none\" }}\r\n            onChange={(e) => {\r\n              let uploadedObj = e.currentTarget.files[0];\r\n              let { name, size, type } = uploadedObj;\r\n\r\n              type = type.split(\"/\")[0];\r\n              size = size / 1000000;\r\n\r\n              if (type !== \"video\") {\r\n                alert(\"Only Videos can be uploaded\");\r\n                return;\r\n              }\r\n\r\n              if (size > 40) {\r\n                alert(\"Can't upload files with size more than 40MB\");\r\n                return;\r\n              }\r\n\r\n              let uploadtask = storage\r\n                .ref(`/reels/${user.uid}/${Date.now() + \"-\" + name}`)\r\n                .put(uploadedObj);\r\n              uploadtask.on(\r\n                \"state_changed\",\r\n                (snapshot) => {\r\n                  var percent =\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                  console.log(percent + \"% done\");\r\n                  if (percent >= 0 && percent < 100) {\r\n                    setIsLoading(true);\r\n                    blurRef.current.style=\"filter:blur(8px)\"\r\n                  } else {\r\n                    setIsLoading(false);\r\n                    blurRef.current.style=\"filter:blur(0px)\"\r\n                  }\r\n                },\r\n                null,\r\n                () => {\r\n                  uploadtask.snapshot.ref.getDownloadURL().then((url) => {\r\n                    firestore\r\n                      .collection(\"users\")\r\n                      .doc(user.uid)\r\n                      .get()\r\n                      .then((docRef) => {\r\n                        firestore.collection(\"reels\").add({\r\n                          uid: user.uid,\r\n                          name: docRef.data().displayName,\r\n                          dp: docRef.data().photoURL,\r\n                          likes: [],\r\n                          comments: [],\r\n                          url: url,\r\n                          type,\r\n                        });\r\n                      });\r\n                  });\r\n                }\r\n              );\r\n            }}\r\n          />\r\n        </>\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Reels;\r\n","import AuthProvider, { userContext } from \"./Components/AuthProvider\";\nimport Login from \"./Components/Login\";\nimport SignUpPersonal from \"./Components/SignUp1\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home\";\nimport SignUp from \"./Components/SignUp2\";\nimport ProfilePage from \"./Components/ProfilePage\";\nimport Reels from \"./Components/Reels\";\n\nlet App = () => {\n  return (\n    <>\n      <AuthProvider>\n        <Router>\n          <Switch>\n            <Route exact path=\"/reels\">\n              <Reels />\n            </Route>\n            <Route exact path=\"/profile-page\">\n              <ProfilePage />\n            </Route>\n            <Route exact path=\"/sign-up1\">\n              <SignUpPersonal />\n            </Route>\n            <Route exact path=\"/sign-up2\">\n              <SignUp />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </Router>\n      </AuthProvider>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}